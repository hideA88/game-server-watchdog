# golangci-lint v2 configuration
version: 2

run:
  timeout: 5m
  tests: true
  build-tags:
    - integration

# v2ではformattersが独立したセクションに
formatters:
  gofmt:
    enabled: true
  goimports:
    enabled: true
    local-prefixes: github.com/hideA88/game-server-watchdog

linters:
  enable:
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - copyloopvar
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - goprintffuncname
    - gosec
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - revive
    - staticcheck
    - unconvert
    - unparam
    - unused
    - whitespace

  disable:
    - gochecknoglobals
    - godox
    - wsl
    - mnd
    - funlen  # 複雑な実装では制限が厳しすぎるため無効化
    - lll     # 行の長さ制限を緩和
    # v2で削除されたlinter: gosimple, stylecheck (staticcheckに統合)

linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 150
    statements: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  govet:
    enable:
      - shadow
  lll:
    line-length: 160
  misspell:
    locale: US
  nolintlint:
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  revive:
    confidence: 0

issues:
  exclude-rules:
    # テストファイルでは一部のリンターを無効化
    - path: _test\.go
      linters:
        - funlen
        - dupl
        - gocyclo
        - errcheck
        - lll
        - gosec

    # main関数では一部のリンターを無効化
    - path: cmd/
      linters:
        - gochecknoinits
        - funlen

    # モックファイルでは厳密なチェックを無効化
    - path: mock
      linters:
        - dupl
        - funlen

    # 長い関数（複雑な実装を含む）での例外
    - path: internal/bot/command/
      linters:
        - funlen
    - path: pkg/docker/
      linters:
        - funlen
    - path: pkg/logging/
      linters:
        - funlen

  # 既知の問題を除外
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*printf?|os\\.(Un)?Setenv). is not checked"
    - "exported method .* should have comment or be unexported"
    - "exported type .* should have comment or be unexported"
    - "exported const .* should have comment or be unexported"

  # デフォルトの除外を使用しない
  exclude-use-default: false

  # 最大同一エラー表示数
  max-same-issues: 0

  # 新しいコードのみチェック
  new: false